# Strict Pre-Commit Configuration for QA Agent
# Comprehensive validation - enforces all quality standards
#
# Purpose: Maintain platform quality through rigorous validation
# Target: QA agent (Agent 4) focused on technical debt cleanup
#
# Installation:
#   pre-commit install  # installs this config by default
#
# Philosophy:
#   - Enforce: All quality gates (ruff, Golden Rules, syntax)
#   - Block: Any violations that could accumulate as technical debt
#   - Clean: Ensure every commit maintains zero-violation standard
#
# For Feature Agents, use the fast profile instead:
#   pre-commit install -c .pre-commit-config.fast.yaml

repos:
  # Ruff - Fast Python linter (formatting DISABLED to prevent trailing comma issues)
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.13.2
    hooks:
      - id: ruff
        args: [--fix, --exit-non-zero-on-fix]
      # DISABLED: ruff-format adds trailing commas causing syntax errors
      # - id: ruff-format

  # Black - Code formatter (DISABLED to prevent trailing comma issues)
  # - repo: https://github.com/psf/black
  #   rev: 24.10.0
  #   hooks:
  #     - id: black
  #       language_version: python3.11

  # Basic Python syntax check
  - repo: local
    hooks:
      - id: python-syntax-check
        name: Check Python syntax
        entry: python -m py_compile
        language: system
        types: [python]
        pass_filenames: true

      # Golden Rules architectural validation
      - id: golden-rules-check
        name: Validate Golden Rules compliance
        entry: python scripts/validation/validate_golden_rules.py --level WARNING --incremental
        language: system
        types: [python]
        pass_filenames: false
        verbose: true
        # ENABLED: WARNING-level validation on commit (21 rules, ~15s)
        # Enforces CRITICAL + ERROR + WARNING rules
        # Use SKIP=golden-rules-check git commit to bypass if needed

      # Autofix validation (async naming, code quality)
      # DISABLED: Needs GoldenRulesAutoFixer integration update
      # - id: autofix-validation
      #   name: Autofix code quality checks
      #   entry: python -c "from hive_tests.autofix import GoldenRulesAutoFixer; import sys; af = GoldenRulesAutoFixer(); violations = []; [violations.extend(af._check_async_naming(f)) for f in sys.argv[1:] if f.endswith('.py')]; print(f'✅ No violations' if not violations else f'⚠️  {len(violations)} violations (warning only)'); exit(0)"
      #   language: system
      #   types: [python]
      #   pass_filenames: true
      #   verbose: true
      #   # Warning only initially - change exit(0) to exit(1) to enforce
