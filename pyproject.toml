[build-system]
requires = [ "poetry-core",]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "hive-workspace"
version = "1.0.0"
description = "Hive multi-agent orchestration system workspace"
authors = [ "Hive System <hive@example.com>",]
packages = []

[tool.ruff]
line-length = 120
target-version = "py311"
exclude = [
    ".git",
    "__pycache__",
    "dist",
    "build",
    ".venv",
    "archive",
    "templates",
    "tests/factory_acceptance",
]

[tool.ruff.lint]
select = [
    "E",    # pycodestyle errors
    "W",    # pycodestyle warnings
    "F",    # pyflakes
    "I",    # isort
    "B",    # flake8-bugbear
    "C4",   # flake8-comprehensions
    "UP",   # pyupgrade
    "COM",  # flake8-commas (enforces trailing commas)
]
ignore = [
    "E501",    # line too long (handled by formatter)
    "B008",    # do not perform function calls in argument defaults
    "C901",    # too complex
    "COM812",  # missing trailing comma (handled by formatter)
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.isort]
known-first-party = ["hive_logging", "hive_config", "hive_db", "hive_cache", "hive_errors", "hive_bus", "hive_async", "hive_performance", "hive_ai", "hive_deployment", "hive_service_discovery", "hive_tests", "hive_models", "hive_algorithms", "hive_cli", "hive_app_toolkit"]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]

[tool.black]
line-length = 120
target-version = ["py311"]
include = "\\.pyi?$"
extend-exclude = "/(\n  # directories\n  \\.eggs\n  | \\.git\n  | \\.hg\n  | \\.mypy_cache\n  | \\.tox\n  | \\.venv\n  | build\n  | dist\n  | archive\n)/\n"

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true
exclude = ["archive/", "legacy/", "tests/"]

[tool.poetry.dependencies]
python = "^3.11"

[tool.poetry.scripts]
queen = "hive_orchestrator.queen:main"
hive-clean = "hive_orchestrator.clean_hive:main"
ai-reviewer = "ai_reviewer.agent:main"
ai-planner = "ai_planner.agent:main"
ai-deployer = "ai_deployer.agent:main"
golden-test = "hive_tests.golden_runner:main"

[tool.pytest.ini_options]
testpaths = [ "apps", "packages", "tests",]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = [ "--tb=short", "--strict-markers", "--disable-warnings", "-v",]
markers = [ "integration: marks tests as integration tests", "unit: marks tests as unit tests", "slow: marks tests as slow running", "asyncio: mark test as async",]

[tool.poetry.group.workspace]
optional = true

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.2"
pytest-cov = "^4.1.0"
pytest-asyncio = "^0.21.0"
black = "^24.8.0"
isort = "^5.13.0"
mypy = "^1.8.0"
ruff = "^0.1.15"
flask = "^3.0.0"
flask-cors = "^4.0.0"

[tool.poetry.group.workspace.dependencies.hive-logging]
path = "packages/hive-logging"
develop = true

[tool.poetry.group.workspace.dependencies.hive-db]
path = "packages/hive-db"
develop = true

[tool.poetry.group.workspace.dependencies.hive-deployment]
path = "packages/hive-deployment"
develop = true

[tool.poetry.group.workspace.dependencies.hive-config]
path = "packages/hive-config"
develop = true

[tool.poetry.group.workspace.dependencies.hive-tests]
path = "packages/hive-tests"
develop = true

[tool.poetry.group.workspace.dependencies.hive-bus]
path = "packages/hive-bus"
develop = true

[tool.poetry.group.workspace.dependencies.hive-errors]
path = "packages/hive-errors"
develop = true

[tool.poetry.group.workspace.dependencies.hive-orchestrator]
path = "apps/hive-orchestrator"
develop = true

[tool.poetry.group.workspace.dependencies.ai-planner]
path = "apps/ai-planner"
develop = true

[tool.poetry.group.workspace.dependencies.ai-reviewer]
path = "apps/ai-reviewer"
develop = true

[tool.poetry.group.workspace.dependencies.ai-deployer]
path = "apps/ai-deployer"
develop = true
