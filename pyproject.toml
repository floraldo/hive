[tool.poetry]
name = "hive-workspace"
version = "1.0.0"
description = "Hive multi-agent orchestration system workspace"
authors = ["Hive System <hive@example.com>"]
packages = []

[tool.poetry.dependencies]
python = "^3.11"

[tool.poetry.scripts]
# Core Hive Services
queen = "hive_orchestrator.queen:main"
hive-clean = "hive_orchestrator.clean_hive:main"

# AI Agents
ai-reviewer = "ai_reviewer.agent:main"
ai-planner = "ai_planner.agent:main"

# EcoSystemiser Application
ecosystemiser = "EcoSystemiser.cli:cli"

# Testing & Quality Tools
golden-test = "hive_testing_utils.golden_runner:main"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.2"
pytest-cov = "^4.1.0"
pytest-asyncio = "*"
black = "*"
isort = "*"
mypy = "*"
ruff = "^0.1.0"  # Fast Python linter - replaces many tools
flask = "^3.0.0"
flask-cors = "^4.0.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

# Define workspace members as optional dependencies for development
[tool.poetry.group.workspace]
optional = true

[tool.poetry.group.workspace.dependencies]
# Generic Infrastructure Packages (True inherit layer)
hive-logging = {path = "packages/hive-logging", develop = true}
hive-db = {path = "packages/hive-db", develop = true}
hive-deployment = {path = "packages/hive-deployment", develop = true}
hive-config = {path = "packages/hive-config", develop = true}
hive-config = {path = "packages/hive-config", develop = true}
hive-tests = {path = "packages/hive-tests", develop = true}
hive-bus = {path = "packages/hive-bus", develop = true}
hive-errors = {path = "packages/hive-errors", develop = true}

# Applications
ecosystemiser = {path = "apps/ecosystemiser", develop = true}
hive-orchestrator = {path = "apps/hive-orchestrator", develop = true}
ai-planner = {path = "apps/ai-planner", develop = true}
ai-reviewer = {path = "apps/ai-reviewer", develop = true}

# Ruff configuration - fast Python linter
[tool.ruff]
line-length = 120
target-version = "py311"
exclude = [
    ".git",
    "__pycache__",
    ".venv",
    "venv",
    "build",
    "dist",
    ".eggs",
    "*.egg",
    ".worktrees",
    "cache",
]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
]
ignore = [
    "E501",  # line too long (handled by formatter)
    "B008",  # do not perform function calls in argument defaults
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.pytest.ini_options]
testpaths = [
    "apps",
    "packages"
]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"
addopts = [
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
    "-v"
]
markers = [
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "slow: marks tests as slow running"
]