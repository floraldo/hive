"""Add unified schema for multi-agent coordination

Revision ID: f97f94fd1a27
Revises:
Create Date: 2025-10-05 01:42:31.341744

"""
from collections.abc import Sequence

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = 'f97f94fd1a27'
down_revision: str | Sequence[str] | None = None
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    """Upgrade schema - Add unified tables WITHOUT removing legacy tables.

    This migration implements the "Prep Now, Migrate Later" strategy:
    - Adds new unified_* tables for future use
    - Keeps all existing tables intact (tasks, workers, runs, etc.)
    - Enables dual-write pattern for safe migration
    """
    # ### commands auto generated by Alembic - please adjust! ###
    # NOTE: Drop commands have been REMOVED to preserve existing tables
    op.create_table('unified_deployment_tasks',
    sa.Column('task_id', sa.String(), nullable=False),
    sa.Column('correlation_id', sa.String(), nullable=False),
    sa.Column('service_name', sa.String(), nullable=False),
    sa.Column('environment', sa.String(), nullable=False),
    sa.Column('commit_sha', sa.String(), nullable=True),
    sa.Column('strategy', sa.String(), nullable=False),
    sa.Column('deployment_config', sa.JSON(), nullable=True),
    sa.Column('deployment_url', sa.String(), nullable=True),
    sa.Column('deployment_status', sa.String(), nullable=True),
    sa.Column('deployment_logs', sa.Text(), nullable=True),
    sa.Column('health_check_url', sa.String(), nullable=True),
    sa.Column('health_status', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('deployed_at', sa.DateTime(), nullable=True),
    sa.Column('validated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('task_id')
    )
    op.create_index(op.f('ix_unified_deployment_tasks_correlation_id'), 'unified_deployment_tasks', ['correlation_id'], unique=False)
    op.create_table('unified_review_tasks',
    sa.Column('task_id', sa.String(), nullable=False),
    sa.Column('correlation_id', sa.String(), nullable=False),
    sa.Column('code_path', sa.String(), nullable=False),
    sa.Column('pr_id', sa.String(), nullable=True),
    sa.Column('review_score', sa.Integer(), nullable=True),
    sa.Column('review_result', sa.JSON(), nullable=True),
    sa.Column('violations', sa.JSON(), nullable=True),
    sa.Column('suggestions', sa.JSON(), nullable=True),
    sa.Column('auto_fix_enabled', sa.Integer(), nullable=True),
    sa.Column('auto_fix_attempts', sa.Integer(), nullable=True),
    sa.Column('auto_fix_result', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('reviewed_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('task_id')
    )
    op.create_index(op.f('ix_unified_review_tasks_correlation_id'), 'unified_review_tasks', ['correlation_id'], unique=False)
    op.create_table('unified_tasks',
    sa.Column('id', sa.String(), nullable=False),
    sa.Column('correlation_id', sa.String(), nullable=False),
    sa.Column('task_type', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('agent_type', sa.String(), nullable=False),
    sa.Column('priority', sa.Integer(), nullable=True),
    sa.Column('input_data', sa.JSON(), nullable=False),
    sa.Column('output_data', sa.JSON(), nullable=True),
    sa.Column('task_metadata', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('started_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('error_message', sa.Text(), nullable=True),
    sa.Column('retry_count', sa.Integer(), nullable=True),
    sa.Column('max_retries', sa.Integer(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_unified_tasks_correlation_id'), 'unified_tasks', ['correlation_id'], unique=False)
    op.create_index(op.f('ix_unified_tasks_status'), 'unified_tasks', ['status'], unique=False)
    op.create_index(op.f('ix_unified_tasks_task_type'), 'unified_tasks', ['task_type'], unique=False)
    op.create_table('unified_workflow_tasks',
    sa.Column('task_id', sa.String(), nullable=False),
    sa.Column('correlation_id', sa.String(), nullable=False),
    sa.Column('workflow_type', sa.String(), nullable=False),
    sa.Column('current_phase', sa.String(), nullable=False),
    sa.Column('total_phases', sa.Integer(), nullable=False),
    sa.Column('phases_completed', sa.Integer(), nullable=True),
    sa.Column('phase_history', sa.JSON(), nullable=True),
    sa.Column('workflow_config', sa.JSON(), nullable=True),
    sa.Column('workflow_result', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('workflow_started_at', sa.DateTime(), nullable=True),
    sa.Column('workflow_completed_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('task_id')
    )
    op.create_index(op.f('ix_unified_workflow_tasks_correlation_id'), 'unified_workflow_tasks', ['correlation_id'], unique=False)

    # DROP COMMANDS REMOVED - Keeping legacy tables intact for dual-write pattern
    # This allows both old and new systems to coexist during migration
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema - Remove only the unified tables.

    This preserves all legacy tables and only removes the new unified_* tables.
    """
    # ### commands auto generated by Alembic - please adjust! ###
    # Drop only the new unified tables
    op.drop_index(op.f('ix_unified_workflow_tasks_correlation_id'), table_name='unified_workflow_tasks')
    op.drop_table('unified_workflow_tasks')
    op.drop_index(op.f('ix_unified_tasks_task_type'), table_name='unified_tasks')
    op.drop_index(op.f('ix_unified_tasks_status'), table_name='unified_tasks')
    op.drop_index(op.f('ix_unified_tasks_correlation_id'), table_name='unified_tasks')
    op.drop_table('unified_tasks')
    op.drop_index(op.f('ix_unified_review_tasks_correlation_id'), table_name='unified_review_tasks')
    op.drop_table('unified_review_tasks')
    op.drop_index(op.f('ix_unified_deployment_tasks_correlation_id'), table_name='unified_deployment_tasks')
    op.drop_table('unified_deployment_tasks')

    # CREATE COMMANDS REMOVED - Legacy tables remain untouched
    # ### end Alembic commands ###
