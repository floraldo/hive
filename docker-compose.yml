version: '3.8'

services:
  # Backend API Service
  backend:
    build:
      context: ./apps/backend
      dockerfile: Dockerfile
    container_name: hive-backend
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=development
      - FLASK_APP=app.py
      - DATABASE_URL=${DATABASE_URL:-sqlite:///hive.db}
    env_file:
      - .env
    volumes:
      - ./apps/backend:/app
      - ./packages:/packages
    networks:
      - hive-network
    restart: unless-stopped

  # Frontend Service
  frontend:
    build:
      context: ./apps/frontend
      dockerfile: Dockerfile
    container_name: hive-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - REACT_APP_API_URL=http://backend:5000
    volumes:
      - ./apps/frontend:/app
      - /app/node_modules
    networks:
      - hive-network
    depends_on:
      - backend
    restart: unless-stopped

  # PostgreSQL Database (optional, for production)
  database:
    image: postgres:15-alpine
    container_name: hive-database
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=hive
      - POSTGRES_USER=${DB_USER:-hive}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-hive_secret}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - hive-network
    restart: unless-stopped

  # Redis Cache (optional, for session management)
  redis:
    image: redis:7-alpine
    container_name: hive-redis
    ports:
      - "6379:6379"
    networks:
      - hive-network
    restart: unless-stopped

networks:
  hive-network:
    driver: bridge

volumes:
  postgres_data: