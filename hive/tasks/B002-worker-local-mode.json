{
  "id": "B002-worker-local-mode",
  "title": "Refactor Worker to Support Local Development Mode",
  "description": "To improve our debugging and development workflow, we need to add a 'local mode' to worker.py. This will allow a developer to run a single task directly without needing the Queen orchestrator to be active.",
  "instruction": "Modify worker.py to support local development mode. The implementation should:\n\n1. Modify worker.py to accept a --local command-line flag\n2. When the --local flag is used, the worker should not require a run_id (it can generate one automatically using timestamp)\n3. In local mode, the worker should directly load the task specified by --task-id, execute it, and save the result, then exit\n4. Local mode should work for all phases (apply, test) based on --phase flag\n5. This should not break the existing 'one-shot' mode used by the Queen\n6. Add helpful error messages if --local is used without --task-id\n7. Update the help text in argparse to document this new feature\n8. Create or update HIVE_CLI_GUIDE.md to document this new local testing feature with usage examples\n\nExample usage:\n  python worker.py backend --local --task-id hello_hive --phase apply\n\nNOTE: This feature will make it much easier to debug individual tasks without running the full orchestration system.",
  "acceptance": [
    "worker.py modified to accept --local flag",
    "Local mode generates automatic run_id when not provided",
    "Worker can execute tasks directly in local mode",
    "Existing one-shot mode still works for Queen",
    "Helpful error messages for invalid flag combinations",
    "HIVE_CLI_GUIDE.md created or updated with local mode documentation",
    "Local mode successfully executes a test task"
  ],
  "priority": "P1",
  "risk": "low",
  "status": "queued",
  "tags": [
    "backend",
    "refactor",
    "developer-experience"
  ],
  "depends_on": [
    "B001-add-queen-tests"
  ],
  "created_at": "2025-09-11T12:00:00.000000+00:00",
  "branch": "agent/backend/b002-worker-local-mode",
  "assignee": "backend"
}