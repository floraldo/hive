[tool.poetry]
name = "ai-deployer"
version = "0.1.0"
description = "Autonomous deployment agent for Hive platform"
authors = ["Hive Team"]
readme = "README.md"
packages = [
    { include = "ai_deployer", from = "src" }
]

[tool.poetry.dependencies]
python = "^3.11"
asyncio = "^3.4.3"
rich = "^13.7.0"
python-dotenv = "^1.0.0"
typing-extensions = "^4.9.0"

# Hive packages (inherit layer)
hive-db = { path = "../../packages/hive-db", develop = true }
hive-logging = { path = "../../packages/hive-logging", develop = true }
hive-errors = { path = "../../packages/hive-errors", develop = true }
hive-deployment = { path = "../../packages/hive-deployment", develop = true }
hive-bus = { path = "../../packages/hive-bus", develop = true }

# Orchestration package
hive-orchestration = { path = "../../packages/hive-orchestration", develop = true }

# DEPRECATED - Will be removed after migration validation
hive-orchestrator = { path = "../hive-orchestrator", develop = true, optional = true }

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.2"
pytest-asyncio = "^0.23.0"
pytest-cov = "^4.0.0"
black = "^24.8.0"
mypy = "^1.8.0"
ruff = "^0.13.2"
isort = "^5.13.0"

# ========================================
# Ruff Configuration (Linter & Formatter)
# ========================================
[tool.ruff]
line-length = 120
target-version = "py311"
exclude = [
    ".git",
    "__pycache__",
    "dist",
    "build",
    ".venv",
    "archive",
]

[tool.ruff.lint]
select = ["E", "W", "F", "I", "B", "C4", "UP", "S"]
ignore = ["E501", "B008", "C901", "COM812", "COM818", "COM819"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = true
line-ending = "auto"

[tool.ruff.lint.isort]
known-first-party = [
    "hive_logging", "hive_config", "hive_db", "hive_cache", "hive_errors",
    "hive_bus", "hive_async", "hive_performance", "hive_ai", "hive_deployment",
    "hive_service_discovery", "hive_tests", "hive_models", "hive_algorithms",
    "hive_cli", "hive_app_toolkit", "hive_orchestration", "hive_graph",
]
section-order = ["future", "standard-library", "third-party", "first-party", "local-folder"]
split-on-trailing-comma = false

[tool.ruff.lint.per-file-ignores]
"tests/**" = ["S101", "S602", "S604"]
"scripts/**" = ["S602", "S604"]
"archive/**" = ["S"]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/__pycache__/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if TYPE_CHECKING:",
    "raise NotImplementedError",
]

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"