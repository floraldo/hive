[tool.poetry]
name = "ai-deployer"
version = "0.1.0"
description = "Autonomous deployment agent for Hive platform"
authors = ["Hive Team"]
readme = "README.md"
packages = [
    { include = "ai_deployer", from = "src" }
]

[tool.poetry.dependencies]
python = "^3.11"
asyncio = "^3.4.3"
rich = "^13.7.0"
python-dotenv = "^1.0.0"
typing-extensions = "^4.9.0"

# Hive packages (inherit layer)
hive-db = { path = "../../packages/hive-db", develop = true }
hive-logging = { path = "../../packages/hive-logging", develop = true }
hive-errors = { path = "../../packages/hive-errors", develop = true }
hive-deployment = { path = "../../packages/hive-deployment", develop = true }
hive-bus = { path = "../../packages/hive-bus", develop = true }

# Import from other apps (allowed app-to-app dependencies)
hive-orchestrator = { path = "../hive-orchestrator", develop = true }

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.2"
pytest-asyncio = "^0.23.0"
pytest-cov = "^4.0.0"
black = "^24.8.0"
mypy = "^1.8.0"
ruff = "^0.1.15"
isort = "^5.13.0"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = "test_*.py"
python_functions = "test_*"
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/__pycache__/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if TYPE_CHECKING:",
    "raise NotImplementedError",
]

[tool.black]
line-length = 88
target-version = ["py311"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
line_length = 88
multi_line_output = 3

[tool.ruff]
select = ["E", "F", "I", "N", "UP", "S", "B", "A", "C4", "T20"]
ignore = ["E501", "S101"]
line-length = 88
target-version = "py311"

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"