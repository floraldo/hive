apiVersion: apps/v1
kind: Deployment
metadata:
  name: hive-ui
  namespace: hive-platform
  labels:
    app: hive-ui
    component: api-service
    version: v1.0.0
    toolkit: hive-app-toolkit
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: hive-ui
  template:
    metadata:
      labels:
        app: hive-ui
        component: api-service
        version: v1.0.0
        toolkit: hive-app-toolkit
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/api/metrics"
    spec:
      serviceAccountName: hive-ui
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: hive-ui
        image: ghcr.io/hive/hive-ui:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        env:
        - name: HIVE-UI_ENV
          value: "production"
        - name: HIVE-UI_LOG_LEVEL
          value: "INFO"
        - name: DATA_PATH
          value: "/data"
        - name: CACHE_PATH
          value: "/cache"
        - name: DAILY_COST_LIMIT
          value: "(100.0,)"
        - name: MONTHLY_COST_LIMIT
          value: "(2000.0,)"
        - name: PER_OPERATION_LIMIT
          value: "1.0"
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 2000m
            memory: 4Gi
        livenessProbe:
          httpGet:
            path: /health/live
            port: http
          initialDelaySeconds: 10
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/ready
            port: http
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
