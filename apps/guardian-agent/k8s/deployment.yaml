apiVersion: apps/v1
kind: Deployment
metadata:
  name: guardian-agent
  namespace: hive-platform
  labels:
    app: guardian-agent
    component: ai-reviewer
    version: v1.0.0
    toolkit: hive-app-toolkit
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: guardian-agent
  template:
    metadata:
      labels:
        app: guardian-agent
        component: ai-reviewer
        version: v1.0.0
        toolkit: hive-app-toolkit
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8000"
        prometheus.io/path: "/api/metrics/prometheus"
        hive-app-toolkit.version: "1.0.0"
    spec:
      serviceAccountName: guardian-agent
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      containers:
      - name: guardian-agent
        image: hive-platform/guardian-agent:latest
        imagePullPolicy: Always
        ports:
        - name: http
          containerPort: 8000
          protocol: TCP
        env:
        - name: GUARDIAN_ENV
          value: "production"
        - name: LOG_LEVEL
          value: "INFO"
        - name: HIVE_APP_TOOLKIT_ENABLED
          value: "true"
        - name: OPENAI_API_KEY
          valueFrom:
            secretKeyRef:
              name: guardian-secrets
              key: openai-api-key
        - name: GITHUB_TOKEN
          valueFrom:
            secretKeyRef:
              name: guardian-secrets
              key: github-token
        - name: GITHUB_WEBHOOK_SECRET
          valueFrom:
            secretKeyRef:
              name: guardian-secrets
              key: webhook-secret
        - name: DATABASE_PATH
          value: "/data/guardian.db"
        - name: CACHE_PATH
          value: "/cache"
        - name: VECTOR_INDEX_PATH
          value: "/data/vectors"
        - name: DAILY_COST_LIMIT
          value: "100.0"
        - name: MONTHLY_COST_LIMIT
          value: "2000.0"
        - name: MAX_CONCURRENT_REVIEWS
          value: "10"
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 2000m
            memory: 4Gi
        livenessProbe:
          httpGet:
            path: /health/live
            port: http
          initialDelaySeconds: 10
          periodSeconds: 30
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/ready
            port: http
          initialDelaySeconds: 15
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        volumeMounts:
        - name: data-volume
          mountPath: /data
        - name: cache-volume
          mountPath: /cache
        - name: config-volume
          mountPath: /app/config
          readOnly: true
      volumes:
      - name: data-volume
        persistentVolumeClaim:
          claimName: guardian-data-pvc
      - name: cache-volume
        emptyDir:
          sizeLimit: 2Gi
      - name: config-volume
        configMap:
          name: guardian-config
      nodeSelector:
        workload: compute-optimized
      tolerations:
      - key: "compute-optimized"
        operator: "Equal"
        value: "true"
        effect: "NoSchedule"
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - guardian-agent
              topologyKey: kubernetes.io/hostname
