name: ðŸ§¹ Repository Hygiene Automation

on:
  schedule:
    # Run every Sunday at 2 AM UTC
    - cron: '0 2 * * 0'
  workflow_dispatch:
    # Allow manual triggering for testing
    inputs:
      create_issue:
        description: 'Create housekeeping issue if findings exist'
        required: false
        default: 'true'
        type: boolean

permissions:
  contents: read
  issues: write
  pull-requests: read

jobs:
  repository-hygiene:
    runs-on: ubuntu-latest
    name: Repository Hygiene Analysis
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Full history for branch analysis
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        pip install requests markdown-link-check markdownlint-cli2
        
    - name: Analyze stale branches
      id: branches
      run: |
        python scripts/operational_excellence/automated_hygiene.py --analyze-branches
        
    - name: Check documentation links
      id: links
      run: |
        python scripts/operational_excellence/automated_hygiene.py --check-links
        
    - name: Scan TODO comments
      id: todos
      run: |
        python scripts/operational_excellence/automated_hygiene.py --scan-todos
        
    - name: Lint documentation
      id: markdown
      run: |
        python scripts/operational_excellence/automated_hygiene.py --lint-docs
        
    - name: Generate hygiene report
      id: report
      run: |
        python scripts/operational_excellence/automated_hygiene.py --generate-report
        
    - name: Create or update housekeeping issue
      if: steps.report.outputs.has_findings == 'true' && (github.event.inputs.create_issue == 'true' || github.event_name == 'schedule')
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const reportContent = fs.readFileSync('repository_hygiene_report.md', 'utf8');
          
          // Look for existing housekeeping issue
          const issues = await github.rest.issues.listForRepo({
            owner: context.repo.owner,
            repo: context.repo.repo,
            labels: ['housekeeping', 'automated'],
            state: 'open'
          });
          
          const issueTitle = 'ðŸ§¹ Weekly Repository Hygiene Report';
          const issueBody = `# Automated Repository Hygiene Report
          
          This issue is automatically generated weekly to track repository maintenance tasks.
          
          ${reportContent}
          
          ---
          
          **Instructions:**
          - Review the findings above
          - Take action on items marked as "Action Required"
          - Close this issue when all items are addressed
          - A new report will be generated next week
          
          *Generated by Repository Hygiene Automation on ${new Date().toISOString()}*`;
          
          if (issues.data.length > 0) {
            // Update existing issue
            await github.rest.issues.update({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issues.data[0].number,
              title: issueTitle,
              body: issueBody
            });
            
            // Add comment about new findings
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: issues.data[0].number,
              body: `## ðŸ“Š Weekly Update - ${new Date().toLocaleDateString()}
              
              New hygiene scan completed. Please review the updated findings above.`
            });
          } else {
            // Create new issue
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: issueTitle,
              body: issueBody,
              labels: ['housekeeping', 'automated', 'maintenance']
            });
          }
          
    - name: Upload hygiene report
      uses: actions/upload-artifact@v4
      with:
        name: repository-hygiene-report
        path: repository_hygiene_report.md
        retention-days: 30
